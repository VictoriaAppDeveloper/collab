@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;700&family=Roboto:wght@400;500;700&display=swap');

/*! @import */

@tailwind base;
@layer base {

    .slide-left-enter-active,
    .slide-left-leave-active,
    .slide-right-enter-active,
    .slide-right-leave-active {
        transform: translateX(0);
        opacity: 1;
        z-index: 10;
        transition: all 0.2s ease-in-out;
    }

    .slide-left-enter,
    .slide-right-leave-active {
        opacity: 0.5;
        z-index: 0;
        transform: translate(100%, 0);
    }

    .slide-left-leave-active,
    .slide-right-enter {
        opacity: 0.5;
        z-index: 0;
        transform: translate(-100%, 0);
    }
    html, body, #app, .layout {
        @apply min-h-screen;
    }
    body {
        font-family: Roboto, sans-serif;
    }
    input[type="text"] {
        @apply pt-3 pb-2 block w-full px-0 mt-0 bg-transparent border-0 border-b appearance-none focus:outline-none focus:ring-0 focus:border-black border-gray-900;
    }
    label {
        @apply absolute duration-300 top-3 z-n1 origin-0 text-gray-500 font-normal;
    }
    .error {
        @apply text-sm text-red-600 hidden;
    }
    .button {
        @apply border-gradient-l-red-600-purple-500-gray-50
        transition-all duration-1000 ease-in-out
        border py-3 px-7 outline-none border-solid border-transparent rounded font-light;
    }
    .button.button--inverted {
        @apply bg-gradient-to-r from-purple-400 via-pink-500 to-red-500;
    }
    .button.button--sm {
        @apply py-2 text-sm;
    }
    .button.button--inverted span {
        @apply text-white;
    }
    .button.button--inverted:hover {
        @apply bg-2x-percents animate-gradient-4x-speed;
    }
    .button.button--no-borders {
        @apply border-0;
    }
    .button.button--icon.button--active {
        @apply bg-red-100 rounded-full;
    }
    .button:not(.button--icon).button--active {
        @apply bg-gradient-to-r from-purple-400 via-pink-500 to-red-500;
    }
    .button:not(.button--icon).button--active span {
        @apply text-white;
    }
    .button.button--icon {
        @apply p-0;
        background: transparent;
    }
    .button:not(.button--inverted):not(.button--icon):not(.button--active):hover {
        @apply border-gradient-l-45-red-600-purple-500-gray-50;
    }

    .button span {
        @apply text-transparent bg-clip-text text-red-500;
    }
    .glitch {
        @apply relative p-8;
    }
    .glitch:before, .glitch:after {
        content:attr(title);
        @apply text-white absolute top-0 p-8 overflow-hidden;
    }
    .glitch:before {
        @apply left-1 animate-glitch-before;
        text-shadow: -3px 0 red;
    }
    .glitch:after {
        @apply -left-1 animate-glitch-after;
        text-shadow: -3px 0 blue;
    }
    .switch-checkbox:checked {
        @apply left-1/2 border-gradient-l-red-600-purple-500-gray-50 border-4 border-transparent border-solid;
    }
    .switch-checkbox:checked + .switch-label {
        @apply bg-gradient-to-r from-purple-400 via-pink-500 to-red-500;
    }
    a {
        @apply text-blue-400;
    }
    input:focus ~ label,
    input:not(:placeholder-shown) ~ label,
    textarea:focus ~ label,
    textarea:not(:placeholder-shown) ~ label,
    select:focus ~ label,
    select:not([value='']):valid ~ label {
        /* @apply transform; scale-75; -translate-y-6; */
        --tw-translate-x: 0;
        --tw-translate-y: 0;
        --tw-rotate: 0;
        --tw-skew-x: 0;
        --tw-skew-y: 0;
        transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate))
        skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
        --tw-scale-x: 0.75;
        --tw-scale-y: 0.75;
        --tw-translate-y: -1.5rem;
    }

    input:focus ~ label,
    select:focus ~ label {
        /* @apply text-black; left-0; */
        --tw-text-opacity: 1;
        color: rgba(0, 0, 0, var(--tw-text-opacity));
        left: 0;
    }
}
@tailwind components;
@tailwind utilities;
